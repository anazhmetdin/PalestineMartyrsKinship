version: "3"

services:
  neo4j:
    container_name: Database
    image: ${NEO4J_DOCKER_IMAGE}
    ports:
      - "${HTTP_PORT}:7474"
      - "${BOLT_PORT}:7687"
      - "${BACK_PORT}:6362"
    volumes:
      - ./DataBase/data:/data
      - ./DataBase/logs:/logs
      - ./DataBase/backups:/backups
      - ./DataBase/import:/import
      - ./DataBase/metrics:/metrics
      - ./DataBase/conf:/var/lib/neo4j/conf
      - ./DataBase/ssl:/ssl
    environment:
      - NEO4J_ACCEPT_LICENSE_AGREEMENT
      - NEO4J_AUTH
      - EXTENDED_CONF
      - NEO4J_PLUGINS=["apoc"]
      - NEO4J_apoc_export_file_enabled=true
      - NEO4J_apoc_import_file_enabled=true
      - server_server_backup_enabled=true
      - server_backup_listen_address=0.0.0.0:${BACK_PORT}
      - dbms_security_procedures_unrestricted=apoc.*
    # This status can be checked using the "docker ps" command.
    healthcheck:
      test: ["CMD-SHELL", "wget --no-verbose --tries=1 --spider localhost:7474 || exit 1"]

  dj:
    container_name: API
    build: ./DjangoApp
    command: python manage.py runserver 0.0.0.0:8080
    volumes:
      - ./DjangoApp:/code
    ports:
      - "${DJANGO_PORT}:8080"
    environment:
      - NEO4J_HOST=${NEO4J_HOST}
      - NEO4J_PORT=${NEO4J_PORT}
      - NEO4J_USERNAME=${NEO4J_USERNAME}
      - NEO4J_PASSWORD=${NEO4J_PASSWORD}
      - NEO4J_ENDPOINT=${NEO4J_ENDPOINT}
      - UI_HOST=${UI_HOST}
    depends_on:
      - neo4j

  ng:
    container_name: UI
    build: AngularUI
    ports:
      - "${ANGULAR_PORT}:80"
    depends_on:
      - dj